const os = require('os');
const startTime = new Date();
let intervalId;
let uptimeEnabled = false; // ржлрзНрж▓рзНржпрж╛ржЧ ржпрзБржХрзНржд ржХрж░рж╛

module.exports = {
'config': {
'name': "upt",
'version': "1.0.0",
'hasPermission': 0x0,
'credits': "ЁЭРВЁЭРШЁЭРБЁЭРДЁЭРС тШвя╕П_ЁЦгШ -ЁЭРБЁЭРОЁЭРУ тЪая╕П ЁЭС╗ЁЭСмЁЭСиЁЭС┤_ тШвя╕П",
'description': "Displays uptime information.",
'commandCategory': "box",
'usages': "upt",
'prefix': "false",
'dependencies': {},
'cooldowns': 0x5
},
'run': async function ({
api: _0x1b9028,
event: _0x2e0c98,
args: _0x2d58a4
}) {
// ржлрж╛ржВрж╢ржи ржпрж╛ ржЖржкржЯрж╛ржЗржо рждржерзНржп ржкрж╛ржарж╛ржмрзЗ
const sendUptimeInfo = async () => {
try {
const elapsedSeconds = (new Date() - startTime) / 1000;
const days = Math.floor(elapsedSeconds / 86400);
const hours = Math.floor(elapsedSeconds % 86400 / 3600);
const minutes = Math.floor(elapsedSeconds % 3600 / 60);
const seconds = Math.floor(elapsedSeconds % 60);
const uptimeString = `${days}d ${hours}h ${minutes}m ${seconds}s`;

const message = `тЩб  тИй_тИй\n я╝ИтАЮтАв ╓К тАвтАЮ)тЩб\nтХнтФАтФАтИктИктФАтФАтФАтФАтФАтФАтФАтЯб\nтФВЁЭЧиЁЭЧгЁЭЧзЁЭЧЬЁЭЧаЁЭЧШ ЁЭЧЬЁЭЧбЁЭЧЩЁЭЧв\nтФЬтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЯб\nтФВ тП░ ЁЭЧеЁЭЧиЁЭЧбЁЭЧзЁЭЧЬЁЭЧаЁЭЧШ\nтФВ ${uptimeString}\nтФЬтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтЯб`;

await _0x1b9028.sendMessage({ 'body': message }, _0x2e0c98.threadID);
} catch (error) {
console.error("Error retrieving system information:", error);
}
};

// ржпржжрж┐ Uptime ржЖржмрзЗржжржи рж╕ржХрзНрж░рж┐ржпрж╝ ржерж╛ржХрзЗ рждрж╛рж╣рж▓рзЗ рждржерзНржп ржкрж╛ржарж╛ржи
if (!uptimeEnabled) {
uptimeEnabled = true;
await sendUptimeInfo(); // ржкрзНрж░ржержоржмрж╛рж░ рждржерзНржп ржкрж╛ржарж╛ржи

// ржкрзНрж░рждрж┐ рзл ржорж┐ржирж┐ржЯ ржкрж░ ржкрж░ рждржерзНржп ржкрж╛ржарж╛ржирзЛрж░ ржЬржирзНржп ржПржХржЯрж┐ рж╕ржорзЯрж╕рзАржорж╛
intervalId = setInterval(sendUptimeInfo, 300000);
} else {
await _0x1b9028.sendMessage({ 'body': "Uptime information is already enabled. Use the command again to refresh." }, _0x2e0c98.threadID);
}
},
'stop': function() {
// ржпржЦржи ржкрзНрж░рзЯрзЛржЬржи рждржЦржи рж╕ржорзЯрж╕рзАржорж╛ ржкрж░рж┐рж╖рзНржХрж╛рж░ ржХрж░рзБржи
if (intervalId) {
clearInterval(intervalId);
intervalId = null;
uptimeEnabled = false; // Uptime ржкрзБржирж░рж╛рзЯ ржирж┐рж╖рзНржХрзНрж░рж┐рзЯ ржХрж░рзБржи
}
}
};
